name: CI

on:
  pull_request:
    branches:
      - master
      - cc-widgets-gh-actions

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        run: yarn install

  linter:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - name: Linting
        run: yarn workspace @webex/widgets run test:eslint

  e2e_test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - name: Test E2E
        run: yarn workspace @webex/widgets run test:e2e

  build:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: yarn run build:prod && yarn workspace @webex/widgets run build:src

  docs:
    runs-on: ubuntu-latest
    needs: linter
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Build Demo Into Docs Folder
        run: yarn workspace @webex/widgets run demo:build

  release:
    runs-on: ubuntu-latest
    needs: [build, docs]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Release
        run: yarn workspace @webex/widgets run release

  unit_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Test Tooling
        run: yarn run test:tooling
      - name: Test CC Widgets
        run: yarn run test:cc-widgets

  release_widgets:
    runs-on: ubuntu-latest
    needs: [build, unit_tests]
    if: github.ref == 'refs/heads/ccwidgets'
    steps:
      - uses: actions/checkout@v2
      - name: Release Widgets
        run: yarn run release:widgets
